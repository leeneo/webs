

这个真的是2016年的问题，时间线没崩坏？！是的，table已经过时了，毫无疑问。前排居然可以战起来？！什么情况！这问题完全无关语义化好吗，语义化是用来喷div+css的，告诉小盆友要花式用html标签。一开始使用table，是因为在网页布局的时候，大家想要的就是严丝合缝表格式样的豆腐块。这是从印刷排版时代沿袭至今的排版思考方式。页面是一个个豆腐块，或者说盒子构成。内容+边距刚好占据整个版面。不过在远古时代，各个浏览器的迷之解析。css没法被正确理解，版面崩得不行。聪明的少年们，想出来一个hack，直接把盒子放在表格的单元格里。row col都写死，你告诉我还怎么崩？！！代价就是多一层嵌套+无法维护。每次修改布局===layout重写一次。在那个蛮荒的远古时代，大家都知道这样做很蠢。但是为了每个浏览器兼容没办法。而且页面量也不多，降低的开发效率也不是不能接受，后面DW出现，WYGWYS式的画网页，比苦战CSS兼容性爽多了。奠定了古代table布局广大的群众基础。它的成功，一方面是自身的努力（页面不崩），一方面考虑到了历史的进程。（狗*的IE）后面随着时代的发展，各家对CSS的实现愈加良好，table失去了其无可取代优势――保证页面兼容性。这个时候开发者们就开始黑它的缺点了，-让DOM飞来飞去比较麻烦。-异步加载一堆数据过来要包装N层才能查插。-多一层嵌套。-修改文档内容工程量大得不要不要的。想减少每次修改的量，使用多个table分离各逻辑模块，和div+css又有什么差？始终前端的朋友们，想要的是像豆腐块一样贴合巴适的页面，CSS盒模型就是用来解决这问题的。现在兼容没问题了，一切都是那么的美丽。不再需要table了，就不用呗，大家轰轰烈烈的重构起来。满足需求的前提下，用更标准的写法。前端的同学们又不是真的不会写代码（文员，前台干不下去才转前端真的是段子），这点脑子还是有的。反对一系列对于div+css需要更多修改的说法。一开始没分割好结构，各种靠position margin padding修修补补才会出现一点修改，css试半天的情况。写div大小时多想想豆腐块 0v0反对css代码量更大，table只需要填进去的说法。基建不做好，每次徒手撸树怪树咯？补充下table也可以兼容移动端，也可以做响应式。table布局，与rem，%宽度，media query并不冲突。跨终端适配的能力上和div+css方案几近等价。table缺陷在于html上太混乱，对于Js，SEO都不友好。用作hack的古老方案，过时了就承认吧，没必要诈尸。这都给洗地是多有情怀啊。如果说现在还有table可以发光发热的地方，大概在于那些简单得不行的静态页企业站，没有任何“重”的交互需要。明明叫画完图的美工同学顺手拖进DW就可以搞定，非要赶潮流雇两个前端码农人肉转码。（要SEO加几个隐藏的h1嘛）