一、	H5简介
HTML5我们可以理解在之前的HTML基础之上新增了一些新的标和 api 而形成的一套新标准。
01 html5的网页骨架非常简洁。
02 html5的语法极其松散，有很多标签可以省略不写，或都只写开始不写结束。
03 html5中新增了很多具有语义的结构签。
04 html5目前并没有达到完全的标准统一，所以我们在使用的时候需要有选择的去用。

二、	H5新增结构标签
01 header ：网页头部标签
02 nav     网页导航标签
03 section  和 div 类似表示一个完整独立的区域
04 aside    一般用来描述侧边栏内容
05 article   一般有用来表述一片文字内容的集合
06 footer   网站的底部内容
注意：
1 在html5中新增了很多标签，不仅仅只有上面这些。
2 上面这些标签在我们进行网页布局的时候可以重复多次使用。
总结：当们学完HTML5之后，我们在做开发的时候并不会大量的去使用 html5中的新标签进行布局，但是我们使用 html5的网页骨架。
我们可以在 html5骨架中使用之前所学过的任意 html标签。因为 html5向下兼容。

三、	表单元素新增属性
01 placeholder: 可以模拟文本框焦点获取和失去时内容切换的效果。
02 autofocus : 这是一个属性值等于属性名的属性，在书写的时候我们只需要书写属性名就可以，具有该属性的元素会自动获取焦点
03 required : 具有该属性的表单元素为必填项
04 autocomplete ： 这个属性有二个值，默认为 on 表示开启自动补全功能，off表示关闭该功能。
注意：
在PC端进行以上属性测试的时候建意将input都写在 form 表单里，同时有的input 需要添加 name 属性。


四、	滑块调色
01 change: 是JQ中提供的一个监测 input 元素 value 值发生变化触发的事件函数。在原生 JS 对应着有一个 onchange 事件操作。


五、	下拉列表结构
<input type=”text” list=”id名称”>
<datalist id=”名称”>

	<option value=””>值1</option>
   ............
</datalist>

注意：
01 datalist 里面添加 option 标签默认下拉数据列表是隐藏的。
02上边的标签必须是 ipnut，为了让它和下面 datalist 联系起来我们需要在 input 的身上添加 list 属性，指向相应的id名为***的 datalist 结构。


六、	H5新增表单类型
01 email : 具有该类型的 input 框会自动验证里面数据是否符合基本的邮箱格式。( @ )
02 url  : 验让是否符合网址格式，需要注意的是它会包括 http://
03 number: 具有该类型的 input 里面输入的内容必须是数字
04 color: 可以调出当前设备下自带的拾色器
05 search: 一般用来做搜索框使用
06 datetime-local: 利用自带控件可以设置本地详细的时间
07 month: 可以设置当前是第***月
08 date: 设置当前为本月几号
09 time : 设置当前的时分秒
10 week : 设置当前是本年的第**周


七、	音频标签
在H5中新增了一个 audio 标签，通过个标签我们可以直接将在网页中引入一些声音资源。
<audio autoplay controls loop>
			
			<!-- 下面这段文本内容只有当前浏览器不支持audio标签的时候才会显示在网页中 -->
			对不起，您的浏览器不支持该标签，请前往 <a href="icd.itcast.cn">传智UI学院</a>
			<source src="music/yinyue.mp3" />
			<source src="music/yinyue.ogg" />
			
	</audio>
注意：
01 利用 audio 标签可以向页面中插入一段音频资源。
02 在使用的时候为了兼容和向下适配，我们会在 audio的标签内书写提示文字，以及通过 source 标签引入不同格式的音频资源。
03 autoplay: 设置当前音频自动播放
04 loop    : 设置音频循环播放
05 controls  : 调出当前设备下自带的播放控件 

八、	声音暂停播放
01 pause() || play() ：这二个函数 是js中提供的专门用来控制声音暂停和播放的。
02 如果我们在使用 jq 选择元素，那么一定要注意需要将 jq 对象转为 js 对象之后才能去调用js 的方法
03 $( ‘audio’ ).get( 0 )  ||  $(‘audio’)[0]


九、	视频标签
<video width="800" autoplay controls>
			<source src="video/movie.mp4"></source>
			<source src="video/movie.ogg"></source>
			<source src="video/movie.webm"></source>
			当前浏览器不支持 video直接播放，点击这里下载视频： <a href="myvideo.webm">下载视频</a>
</video>

注意：
01 video 标签可以设置宽和高，但是建义只设置一个即可，另外一边自动缩放
02 目前也没有哪种视频格式可以被所有浏览器都支持，因此和 audio 一样需要通过 source 引入不同的视频资源。


十、	视频暂停和播放
在JS中新增了二个事件来监测当前视频暂停还是播放
Onpause   onplay --->这是二个事件，和之前讲的 play() pause() 有质的区别


十一、	本地存储
在html5中定义了二个对象可以直接将数据存储在我们的客户端
localStroage || sessionStroage : 无论用哪存方式进行数据存储那么都会有相同的操作方法。
01 setItem( ‘键名’,键值 )
02 getItem( ‘键名’ )
03 removeItem( ‘键名’ );
注意：
上面的二个对象都可以存储数据，但是 localStroage 存储的数据在页面关闭之后再次打开时仍然能找到，
而 sessionStorage 存储的数据在页面关闭后数据也会从客户端清除。

十二、	选择器权重计算
1、权重计算规则

第一等：代表内联样式，如: style=””，权值为1000。
第二等：代表ID选择器，如：#content，权值为0100。
第三等：代表类，伪类和属性选择器，如.content，权值为0010。
第四等：代表类型选择器和伪元素选择器，如div p，权值为0001。
通配符、子选择器、相邻选择器等的。如*、>、+,权值为0000。
继承的样式没有权值。

2、比较规则

1,0,0,0 > 0,99,99,99。也就是说从左往右逐个等级比较，前一等级相等才往后比。
无论是行间、内部和外部样式，都是按照这个规则来进行比较。而不是直观的行间>内部>外部样式；ID>class>元素。
之所以有这样的错觉，是因为确实行间为第一等的权重，所以它的权重是最高的。而内部样式可能一般写在了外部样式引用了之后，所以覆盖掉了之前的。
在权重相同的情况下，后面的样式会覆盖掉前面的样式。
通配符、子选择器、相邻选择器等的。虽然权值为0000，但是也比继承的样式优先。

3、!important

!important 的作用是提升优先级，换句话说。加了这句的样式的优先级是最高的（比内联样式的优先级还高)。
 






