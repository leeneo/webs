一、	视口基本介绍

1 视口是什么：
我们可以将设备浏览器用来显示网页内容的区域大小理解为视口

2 为什么要有视口：
因为我们现需要越来越来去在移动设备上展示页面，而如果直接将之前为大屏PC 设备设计页面放在手持设备上去展示，
因为尺寸的问题，如果不做处理那么肯定会出现放不下的现象。

3 视口的默认大小：
最早由苹果公司提出视口的概念，它们将手机的默认视口大小设置为 980px 那么这个时候就解决了不做任何处理页面也可以放得下的问题。
后来被业界采用，也有一些操作系统下的视口不是980,但是可以忽略不计。

1.2	视口默认大小
1 一般情况下默认大小都为 980px 
document.documentElement.clientWidth---> 当前大小

2 如果我们直接采用 980px 来做为我们的视口大小，那么之前在PC上可以看的很清楚的元素到了移动设备上就无法正常查看了。

三、	视口标签设置
<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0" />

注意：
01 meta:vp 就可以得到上面的一串代码，不需要记住每个单词但是需要明白它们都是做什么的。
02 width: 后面可以设置二种形式参数，具体数值和关键字 device-width 
03 user-scalable: 是否允许用户手指缩放操作，默认为 no  设置 yes 表示允许
04 initial-scale: 它表示将当前页面元素缩放多少倍显示，可以大于或小于1，等于1的时候表示正常显示，相当于浏览器的 ctrl+’+’ || ctrl+’-’的操作
05 最后二个参数一般采用默认值都为1 表示页面不缩放显示


四、	合适的视口标签设置
1 什么样的视口大小是合适的？
能够完全显示和还原设计稿像素信息的视口大小是合适的。

2 如何设置合适视口大小？
以iphone6举例，它的设备尺寸宽度为 375【逻辑分辨率】，而它的屏幕物理分辨率为 750px ，它们之间存在一个 2 倍的关系...
其实在每一块屏都会存在这么一个比值关系，这个比值我们称之为独立像素比（devicePixelRatio），
它就屏幕的物理分辨率/屏幕的逻辑分辨率得到，这几个值我们都是只能读来使用而不能用代码进行修改。
也正是利用这些个关系我们可以动态来缩放当前的 html 达到合理视口的设置。

屏幕的物理像素： 就是该屏能够显示下的最多的像素点信息
	屏幕的逻辑像素： 可以理解为我们当前设备的物理尺寸
    独立像素比：  它是一个比值，就是物理像素/逻辑像素

window.devicePixelRatio是设备上物理像素和设备独立像素(device-independent pixels (dips))的比例

五、	移动端页面如何适配
1 我们设计移动端页面的时候根椐么来选择版心？
如果当前的设计稿是按着某块屏幕的物理分辨率大小做的版心，那么相对于这个设备来说，此PSD 就是最好的显示。
根椐现在市场上主流的设备大小，我们一般采用的是 750*1334 的大小做为PSD稿的尺寸。
因为它是一个择中的值，比它小的就相当于大图缩小，不会失真，比它大的缩放比例也在用户能够接受范围之内。

    01: 多大的视口称之为合适？			
	目前来说如果我们想要做到绝对的适配，那么我们在设计PSD的时候就需要给所有尺寸的设备都设计一个PSD，
    但是这样的工作量就非常的大也没有特别的必要。因此我们真正在做设计的时候，
    对于移动端页面不管是什么手机操作系统我们都走一版设计稿，然后让这个设计稿去适配所有的设备。
			
	02 ：这版设计稿的版心是多少？				
	目前来说使用的非常多的一个标准就是 750*1334，首页这个尺寸是iphone6的屏幕物理分辨率然后如果我们用的是比6小的手机那么相当于将大图缩小，
    展示不会失真。如果比6要大，相当于将小图放大。可是比6 大的就是 6plus 7 8 9 .....这个缩放的比例是在用户能接受的范围内

六、	移动端页面适配方案
1.	求出独立像素比的反值
2.	赋值给initial-scale
3.	求出屏幕大小的1/10
4.	赋值给html的font-size
5.	通过less来计算每个元素在不同设备上的尺寸   

我们在实际工作中都是用一版设计稿来适配所有的设备，要达到的目的就是页面中的元素在所有设备上显示的大小看起来是完全一样的。
在C3中新增了一个相对单位，rem , 可以在设置元素大小的时候不去书写具体的px值，而利用 rem 来换算。
1 rem 是什么？
它就是一个相对的字体单位。
2 1rem 等于多少？
首先这是一个变化的值，设备不同这个基准值也会发生变化，不论怎么变我们采用淘宝目前的做法，将当前屏幕等分为 10 份，每一份的宽度就是 1rem 的大小。
3 如何使用 rem ?
我们求出1rem的值之后，利用JS将它添加在html元素身上做为 font-size性
然后根椐我们设计稿中量出的尺寸来决定当前换算时除以多少基准值。

七、	iScroll 插件使用
01 将相应的HTML + css 整理到我们的HTML页面中。
02 引入相应的 iscroll.js 文件，然后再一对 script 对该插件进行初始化。

New Scrroll();
var myScroll;
function loaded() {
	myScroll = new iScroll('wrapper');
}
document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);
document.addEventListener('DOMContentLoaded', function () { setTimeout(loaded, 200); }, false);




